- name: SchedulingBasic
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
    - createPods: 500
      podTemplatePath: config/pod-default.yaml
    - createPods: 1000
      podTemplatePath: config/pod-default.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
    - createPods: 1000
      podTemplatePath: config/pod-default.yaml
    - createPods: 1000
      podTemplatePath: config/pod-default.yaml
      collectMetrics: true

- name: SchedulingPodAntiAffinity
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      uniqueNodeLabelStrategy:
        labelKey: kubernetes.io/hostname
    - createPods: 100
      podTemplatePath: config/pod-with-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 400
      podTemplatePath: config/pod-with-pod-anti-affinity.yaml
      collectMetrics: true
      namespace: sched-test
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      uniqueNodeLabelStrategy:
        labelKey: kubernetes.io/hostname
    - createPods: 1000
      podTemplatePath: config/pod-with-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-pod-anti-affinity.yaml
      collectMetrics: true
      namespace: sched-test

- name: SchedulingSecrets
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
    - createPods: 500
      podTemplatePath: config/pod-with-secret-volume.yaml
    - createPods: 1000
      podTemplatePath: config/pod-with-secret-volume.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
    - createPods: 5000
      podTemplatePath: config/pod-with-secret-volume.yaml
    - createPods: 1000
      podTemplatePath: config/pod-with-secret-volume.yaml
      collectMetrics: true

- name: SchedulingInTreePVs
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
    - createPods: 500
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
    - createPods: 1000
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
    - createPods: 5000
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
    - createPods: 1000
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
      collectMetrics: true

- name: SchedulingMigratedInTreePVs
  featureGates:
    CSIMigration: true
    CSIMigrationAWS: true
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      nodeAllocatableStrategy:
        nodeAllocatable:
          attachable-volumes-csi-ebs.csi.aws.com: "39"
        csiNodeAllocatable:
          ebs.csi.aws.com:
            count: 39
        migratedPlugins:
        - "kubernetes.io/aws-ebs"
    - createPods: 500
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
    - createPods: 1000
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      nodeAllocatableStrategy:
        nodeAllocatable:
          attachable-volumes-csi-ebs.csi.aws.com: "39"
        csiNodeAllocatable:
          ebs.csi.aws.com:
            count: 39
        migratedPlugins:
        - "kubernetes.io/aws-ebs"
    - createPods: 5000
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
    - createPods: 1000
      persistentVolumeTemplatePath: config/pv-aws.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
      collectMetrics: true

- name: SchedulingCSIPVs
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      nodeAllocatableStrategy:
        nodeAllocatable:
          attachable-volumes-csi-ebs.csi.aws.com: "39"
        csiNodeAllocatable:
          ebs.csi.aws.com:
            count: 39
    - createPods: 500
      persistentVolumeTemplatePath: config/pv-csi.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
    - createPods: 1000
      persistentVolumeTemplatePath: config/pv-csi.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      nodeAllocatableStrategy:
        nodeAllocatable:
          attachable-volumes-csi-ebs.csi.aws.com: "39"
        csiNodeAllocatable:
          ebs.csi.aws.com:
            count: 39
    - createPods: 5000
      persistentVolumeTemplatePath: config/pv-csi.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
    - createPods: 1000
      persistentVolumeTemplatePath: config/pv-csi.yaml
      persistentVolumeClaimTemplatePath: config/pvc.yaml
      collectMetrics: true

- name: SchedulingPodAffinity
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "failure-domain.beta.kubernetes.io/zone"
        labelValues: ["zone1"]
    - createPods: 500
      podTemplatePath: config/pod-with-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-pod-affinity.yaml
      namespace: sched-test
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "failure-domain.beta.kubernetes.io/zone"
        labelValues: ["zone1"]
    - createPods: 5000
      podTemplatePath: config/pod-with-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-pod-affinity.yaml
      namespace: sched-test
      collectMetrics: true

- name: SchedulingPreferredPodAffinity
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      uniqueNodeLabelStrategy:
        labelKey: kubernetes.io/hostname
    - createPods: 500
      podTemplatePath: config/pod-with-preferred-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-preferred-pod-affinity.yaml
      namespace: sched-test
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      uniqueNodeLabelStrategy:
        labelKey: kubernetes.io/hostname
    - createPods: 5000
      podTemplatePath: config/pod-with-preferred-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-preferred-pod-affinity.yaml
      namespace: sched-test
      collectMetrics: true

- name: SchedulingPreferredPodAntiAffinity
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      uniqueNodeLabelStrategy:
        labelKey: kubernetes.io/hostname
    - createPods: 500
      podTemplatePath: config/pod-with-preferred-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-preferred-pod-anti-affinity.yaml
      namespace: sched-test
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      uniqueNodeLabelStrategy:
        labelKey: kubernetes.io/hostname
    - createPods: 5000
      podTemplatePath: config/pod-with-preferred-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-with-preferred-pod-anti-affinity.yaml
      namespace: sched-test
      collectMetrics: true

- name: SchedulingNodeAffinity
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "failure-domain.beta.kubernetes.io/zone"
        labelValues: ["zone1"]
    - createPods: 500
      podTemplatePath: config/pod-with-node-affinity.yaml
    - createPods: 1000
      podTemplatePath: config/pod-with-node-affinity.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "failure-domain.beta.kubernetes.io/zone"
        labelValues: ["zone1"]
    - createPods: 5000
      podTemplatePath: config/pod-with-node-affinity.yaml
    - createPods: 1000
      podTemplatePath: config/pod-with-node-affinity.yaml
      collectMetrics: true

- name: TopologySpreading
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "topology.kubernetes.io/zone"
        labelValues: ["moon-1", "moon-2", "moon-3"]
    - createPods: 500
      podTemplatePath: config/pod-with-topology-spreading.yaml
    - createPods: 1000
      podTemplatePath: config/pod-with-topology-spreading.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "topology.kubernetes.io/zone"
        labelValues: ["moon-1", "moon-2", "moon-3"]
    - createPods: 5000
      podTemplatePath: config/pod-with-topology-spreading.yaml
    - createPods: 2000
      podTemplatePath: config/pod-with-topology-spreading.yaml
      collectMetrics: true

- name: PreferredTopologySpreading
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "topology.kubernetes.io/zone"
        labelValues: ["moon-1", "moon-2", "moon-3"]
    - createPods: 500
      podTemplatePath: config/pod-with-preferred-topology-spreading.yaml
    - createPods: 1000
      podTemplatePath: config/pod-with-preferred-topology-spreading.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "topology.kubernetes.io/zone"
        labelValues: ["moon-1", "moon-2", "moon-3"]
    - createPods: 5000
      podTemplatePath: config/pod-with-preferred-topology-spreading.yaml
    - createPods: 2000
      podTemplatePath: config/pod-with-preferred-topology-spreading.yaml
      collectMetrics: true

- name: MixedSchedulingBasePod
  workloads:
  - name: 500Nodes
    ops:
    - createNodes: 500
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "topology.kubernetes.io/zone"
        labelValues: ["zone1"]
    - createPods: 200
      podTemplatePath: config/pod-default.yaml
      namespace: sched-setup
    - createPods: 200
      podTemplatePath: config/pod-with-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 200
      podTemplatePath: config/pod-with-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 200
      podTemplatePath: config/pod-with-preferred-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 200
      podTemplatePath: config/pod-with-preferred-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-default.yaml
      collectMetrics: true
  - name: 5000Nodes
    ops:
    - createNodes: 5000
      nodeTemplatePath: config/node-default.yaml
      labelNodePrepareStrategy:
        labelKey: "topology.kubernetes.io/zone"
        labelValues: ["zone1"]
    - createPods: 2000
      podTemplatePath: config/pod-default.yaml
      namespace: sched-setup
    - createPods: 2000
      podTemplatePath: config/pod-with-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 2000
      podTemplatePath: config/pod-with-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 2000
      podTemplatePath: config/pod-with-preferred-pod-affinity.yaml
      namespace: sched-setup
    - createPods: 2000
      podTemplatePath: config/pod-with-preferred-pod-anti-affinity.yaml
      namespace: sched-setup
    - createPods: 1000
      podTemplatePath: config/pod-default.yaml
      collectMetrics: true
